<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>originator.server</artifactId>
	<packaging>war</packaging>
	<name>originator.server</name>
	<description></description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<start-class>com.nytcoder.originator.server.App</start-class>
		<maven.build.timestamp.format>dd-MM-yyyy </maven.build.timestamp.format>
		<timestamp>${maven.build.timestamp}</timestamp>
		<server-build-location>../../maven-build/${timestamp}</server-build-location>
		<client-location>../../client</client-location>
	</properties>
	<parent>
		<groupId>com.nytcoder</groupId>
		<artifactId>originator</artifactId>
		<version>${originator.version}</version>
	</parent>
	<profiles>
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete
											file="${project.build.outputDirectory}/application.properties" />
										<copy
											file="src/main/resources/application-prod.properties"
											tofile="${project.build.outputDirectory}/application.properties" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.10</version>
						<executions>
							<execution>
								<id>timestamp-property</id>
								<goals>
									<goal>timestamp-property</goal>
								</goals>
								<configuration>
									<name>build.time</name>
									<pattern>MM/dd/yyyy hh:mm aa</pattern>
									<locale>en_US</locale>
									<timeZone>EST</timeZone>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<failOnError>false</failOnError>
							<filesets>
								<fileset>
									<directory>target</directory>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
									</arguments>
									<workingDirectory>${client-location}</workingDirectory>
									<target>
										<echo message="Npm install" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>angular-cli build</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>run</argument>
										<argument>build</argument>
										<argument>--prod</argument>
									</arguments>
									<workingDirectory>${client-location}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-resources-2</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>../../maven-build/${build.time}</outputDirectory>
									<resources>
										<resource>
											<directory>target</directory>
											<includes>
												<include>**/*.war</include>
											</includes>
										</resource>
										<resource>
											<directory>${client-location}</directory>
											<includes>
												<include>dist/**/*.*</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>test</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete
											file="${project.build.outputDirectory}/application.properties" />
										<copy
											file="src/main/resources/application-test.properties"
											tofile="${project.build.outputDirectory}/application.properties" />
										</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<failOnError>false</failOnError>
							<filesets>
								<fileset>
									<directory>target</directory>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
									</arguments>
									<workingDirectory>${client-location}</workingDirectory>
									<target>
										<echo message="Npm install" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>angular-cli build</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>run</argument>
										<argument>build:test</argument>
									</arguments>
									<workingDirectory>${client-location}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-resources-2</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${server-build-location}</outputDirectory>
									<resources>
										<resource>
											<directory>target</directory>
											<includes>
												<include>**/*.war</include>
											</includes>
										</resource>
										<resource>
											<directory>${client-location}</directory>
											<includes>
												<include>dist/**/*.*</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
				
						
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dev</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete
											file="${project.build.outputDirectory}/application.properties" />
										<copy
											file="src/main/resources/application-dev.properties"
											tofile="${project.build.outputDirectory}/application.properties" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<failOnError>false</failOnError>
							<filesets>
								<fileset>
									<directory>target</directory>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
									</arguments>
									<workingDirectory>${client-location}</workingDirectory>
									<target>
										<echo message="Npm install" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>angular-cli build</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>run</argument>
										<argument>build:dev</argument>
									</arguments>
									<workingDirectory>${client-location}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-resources-2</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${server-build-location}</outputDirectory>
									<resources>
										<resource>
											<directory>target</directory>
											<includes>
												<include>**/*.war</include>
											</includes>
										</resource>
										<resource>
											<directory>${client-location}</directory>
											<includes>
												<include>dist/**/*.*</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>2.8</version>
            </plugin>
		
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>

		<dependency>
			<groupId>com.nytcoder</groupId>
			<artifactId>originator.mcq.db</artifactId>
		</dependency>
		<dependency>
			<groupId>com.nytcoder</groupId>
			<artifactId>originator.mcq.model</artifactId>
		</dependency>
		<dependency>
			<groupId>com.nytcoder</groupId>
			<artifactId>originator.mcq.service</artifactId>
		</dependency>
		<dependency>
			<groupId>com.nytcoder</groupId>
			<artifactId>originator.mcq.rest</artifactId>
		</dependency>
		<dependency>
			<groupId>com.nytcoder</groupId>
			<artifactId>originator.resume.db</artifactId>
		</dependency>
		<dependency>
			<groupId>com.nytcoder</groupId>
			<artifactId>originator.resume.model</artifactId>
		</dependency>
		<dependency>
			<groupId>com.nytcoder</groupId>
			<artifactId>originator.resume.service</artifactId>
		</dependency>
		<dependency>
			<groupId>com.nytcoder</groupId>
			<artifactId>originator.resume.rest</artifactId>
		</dependency>
		<dependency>
			<groupId>com.nytcoder</groupId>
			<artifactId>originator.common</artifactId>
		</dependency>
	</dependencies>
	<build>
		<finalName>originator</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
